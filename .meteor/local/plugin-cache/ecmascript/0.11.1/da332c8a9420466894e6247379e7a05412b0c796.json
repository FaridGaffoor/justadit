{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/farid/Documents/Projects/Meteor/justadit/lib/common.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"lib/common.js","filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/common.js","passPerPreset":false,"envName":"development","cwd":"/Users/farid/Documents/Projects/Meteor/justadit","root":"/Users/farid/Documents/Projects/Meteor/justadit","generatorOpts":{"filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/common.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/common.js"}},"code":"//import { Buffer } from \"buffer\";\n// Handlebars.registerHelper('saveImageFile',function(fbinaryData,filename)\n// {\n//   //import {FilesCollection} from 'meteor/ostrio:files';\n//   //var fs = require('meteor/ostrio:files');\n//   var result = false;\n//   var  base64Image = fbinaryData.split(\",\")[1];\n//   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n//   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n//   //productImage = filename;\n//   var  imagePath = Meteor.settings.products.imgPath;\n//   console.log(imagePath);\n//   try\n//   {\n//   require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n//         if (err)\n//         {\n//             console.log(err); // writes out file without error, but it's not a valid image\n//         }\n//         else\n//         {\n//           result = true;\n//         }\n//       });\n//     }\n//     catch(exp)\n//     {\n//       console.log(\"Client side File Save to server...\" + imagePath + filename);\n//       result = false;\n//     }\n//     return result;\n// });\nHandlebars.registerHelper('UILogger', function (source, obj) {\n  console.log(\"UI Logger : \" + source);\n  console.log(\"Object : \" + obj);\n});\n\nfunction newRandomId(prefixStr) {\n  var rnd = prefixStr + \"_\" + require(\"meteor/random\").id();\n\n  return rnd;\n} // Handlebars.registerHelper(\"getReferenceData\",function(refname){\n//   console.log(\"reference data load to cache\");\n//   var result = Meteor.apply('getReferenceData',[refname],{ wait:true,returnStubValue: false });\n// });\n\n\nfunction jsWriteFile(fbinaryData, filename) {\n  var result = false;\n\n  try {\n    //import {FilesCollection} from 'meteor/ostrio:files';\n    //var fs = require('meteor/ostrio:files');\n    // global.Buffer = global.Buffer || Npm.require(\"buffer\").Buffer;\n    var result = true;\n\n    var fs = Npm.require('fs');\n\n    var base64Image = fbinaryData.split(\",\")[1];\n    var binaryData = new Buffer(base64Image, 'base64').toString('binary'); //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n    //productImage = filename;\n\n    console.log(\"Writing file\");\n    var pathtoFile = Meteor.rootPath;\n    var strPath = pathtoFile.substr(0, pathtoFile.length - 7);\n    var imagePath = strPath + Meteor.settings.products.fileSavePath;\n    imagePath = Meteor.settings.products.fileSavePath;\n    var writeFileName = imagePath + filename;\n    console.log(writeFileName);\n\n    try {\n      // var fileWriter = new writeFile()\n      //require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n      if (!fs.exists(writeFileName)) {\n        fs.writeFile(imagePath + filename, binaryData, \"binary\", function (err) {\n          if (err) {\n            console.log(err); // writes out file without error, but it's not a valid image\n\n            result = false;\n          } else {\n            result = true;\n          }\n        });\n      }\n    } catch (exp) {\n      console.log(\"Server side File Save to server...\" + imagePath + filename);\n      console.log(exp);\n      result = false;\n    }\n  } catch (error) {\n    result = false;\n  }\n\n  return result;\n}\n\nMeteor.methods({\n  saveImageFile: function (fbinaryData, filename) {\n    try {\n      return jsWriteFile(fbinaryData, filename);\n    } catch (error) {\n      throw error;\n    } //  //import {FilesCollection} from 'meteor/ostrio:files';\n    //  //var fs = require('meteor/ostrio:files');\n    //  // global.Buffer = global.Buffer || Npm.require(\"buffer\").Buffer;\n    //   var result = true;\n    //   var fs = Npm.require('fs');\n    //   var  base64Image = fbinaryData.split(\",\")[1];\n    //   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n    //   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n    //   //productImage = filename;\n    //   var  imagePath = Meteor.settings.products.fileSavePath;\n    //   var writeFileName = imagePath + filename;\n    //   console.log(writeFileName);\n    //   try\n    //   {\n    //   // var fileWriter = new writeFile()\n    //   //require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n    //         if (!fs.exists(writeFileName))\n    //         {   \n    //         fs.writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n    //             if (err)\n    //             {\n    //                 console.log(err); // writes out file without error, but it's not a valid image\n    //                 result = false;\n    //             }\n    //             else\n    //             {\n    //               result = true;\n    //             }\n    //           });\n    //         }\n    //     }\n    //     catch(exp)\n    //     {\n    //       console.log(\"Server side File Save to server...\" + imagePath + filename);\n    //       console.log(exp);\n    //       result = false;\n    //     }\n    //     return result;\n\n  },\n  getReferenceData: function (refName) {\n    switch (refName) {\n      case \"businessCat\":\n        return ReferenceData.find({\n          name: busCat\n        });\n        break;\n\n      case \"productCat\":\n        return ReferenceData.find({\n          name: prdCat\n        });\n        break;\n\n      case \"timeCat\":\n        return ReferenceData.find({\n          name: addTime\n        });\n        break;\n\n      default:\n        return {};\n    }\n  }\n}); // function _saveImageFile()\n// {\n//   var result = false;\n//   var  base64Image = fbinaryData.split(\",\")[1];\n//   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n//   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n//   //productImage = filename;\n//   var  imagePath = Meteor.settings.product.filePath;\n//   try\n//   {\n//   require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n//         if (err)\n//         {\n//             console.log(err); // writes out file without error, but it's not a valid image\n//         }\n//         else\n//         {\n//           result = true;\n//         }\n//       });\n//     }\n//     catch(exp)\n//     {\n//       console.log(\"Client side File Save to server...\" + filename);\n//       result = false;\n//     }\n//     return result;\n// }","map":{"version":3,"sources":["lib/common.js"],"names":["Handlebars","registerHelper","source","obj","console","log","newRandomId","prefixStr","rnd","require","id","jsWriteFile","fbinaryData","filename","result","fs","Npm","base64Image","split","binaryData","Buffer","toString","pathtoFile","Meteor","rootPath","strPath","substr","length","imagePath","settings","products","fileSavePath","writeFileName","exists","writeFile","err","exp","error","methods","saveImageFile","getReferenceData","refName","ReferenceData","find","name","busCat","prdCat","addTime"],"mappings":"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","sourcesContent":["//import { Buffer } from \"buffer\";\n\n\n \n\n\n// Handlebars.registerHelper('saveImageFile',function(fbinaryData,filename)\n// {\n//   //import {FilesCollection} from 'meteor/ostrio:files';\n//   //var fs = require('meteor/ostrio:files');\n//   var result = false;\n//   var  base64Image = fbinaryData.split(\",\")[1];\n//   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n//   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n//   //productImage = filename;\n//   var  imagePath = Meteor.settings.products.imgPath;\n//   console.log(imagePath);\n//   try\n//   {\n//   require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n//         if (err)\n//         {\n//             console.log(err); // writes out file without error, but it's not a valid image\n//         }\n//         else\n//         {\n//           result = true;\n//         }\n//       });\n//     }\n//     catch(exp)\n//     {\n//       console.log(\"Client side File Save to server...\" + imagePath + filename);\n//       result = false;\n//     }\n//     return result;\n  \n// });\n\nHandlebars.registerHelper('UILogger',function(source,obj)\n{\n  console.log(\"UI Logger : \" + source);\n  console.log(\"Object : \"+ obj);\n});\n\nfunction newRandomId(prefixStr)\n{\n  var rnd = prefixStr + \"_\" + require(\"meteor/random\").id();\n  return rnd;\n}\n\n// Handlebars.registerHelper(\"getReferenceData\",function(refname){\n//   console.log(\"reference data load to cache\");\n//   var result = Meteor.apply('getReferenceData',[refname],{ wait:true,returnStubValue: false });\n// });\n\nfunction jsWriteFile(fbinaryData,filename)\n{\n  var  result = false;\n  try \n  {\n    //import {FilesCollection} from 'meteor/ostrio:files';\n   //var fs = require('meteor/ostrio:files');\n   // global.Buffer = global.Buffer || Npm.require(\"buffer\").Buffer;\n   var result = true;\n   var fs = Npm.require('fs');\n   var  base64Image = fbinaryData.split(\",\")[1];\n   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n   //productImage = filename;\n  console.log(\"Writing file\");\n     var pathtoFile =  Meteor.rootPath;\n    var strPath = pathtoFile.substr(0,pathtoFile.length - 7);\n\n    \n     \n\n    \n   var  imagePath = strPath + Meteor.settings.products.fileSavePath;\n   imagePath = Meteor.settings.products.fileSavePath;\n   var writeFileName = imagePath + filename;\n  \n   console.log(writeFileName);\n   try\n   {\n   // var fileWriter = new writeFile()\n   //require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n         if (!fs.exists(writeFileName))\n         {   \n         fs.writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n\n             if (err)\n             {\n                 console.log(err); // writes out file without error, but it's not a valid image\n                 result = false;\n             }\n             else\n             {\n               result = true;\n             }\n           });\n         }\n     }\n     catch(exp)\n     {\n       console.log(\"Server side File Save to server...\" + imagePath + filename);\n       console.log(exp);\n       result = false;\n     }\n  } \n  catch (error) \n  {\n    result = false;\n  }\n  return result;\n}\n\n\nMeteor.methods({ \n  saveImageFile: function(fbinaryData,filename)\n  {\n    try {\n      return jsWriteFile(fbinaryData,filename);\n    } catch (error) {\n      throw error;\n    }\n\n  //  //import {FilesCollection} from 'meteor/ostrio:files';\n  //  //var fs = require('meteor/ostrio:files');\n  //  // global.Buffer = global.Buffer || Npm.require(\"buffer\").Buffer;\n  //   var result = true;\n  //   var fs = Npm.require('fs');\n  //   var  base64Image = fbinaryData.split(\",\")[1];\n  //   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n  //   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n  //   //productImage = filename;\n  //   var  imagePath = Meteor.settings.products.fileSavePath;\n  //   var writeFileName = imagePath + filename;\n   \n  //   console.log(writeFileName);\n  //   try\n  //   {\n  //   // var fileWriter = new writeFile()\n  //   //require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n  //         if (!fs.exists(writeFileName))\n  //         {   \n  //         fs.writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n\n  //             if (err)\n  //             {\n  //                 console.log(err); // writes out file without error, but it's not a valid image\n  //                 result = false;\n  //             }\n  //             else\n  //             {\n  //               result = true;\n  //             }\n  //           });\n  //         }\n  //     }\n  //     catch(exp)\n  //     {\n  //       console.log(\"Server side File Save to server...\" + imagePath + filename);\n  //       console.log(exp);\n  //       result = false;\n  //     }\n  //     return result;\n    \n  },\n  getReferenceData:function(refName)\n  {\n\n    switch(refName) \n      {\n        case \"businessCat\":\n            return ReferenceData.find({name:busCat});\n            break;\n        case \"productCat\":\n        return ReferenceData.find({name:prdCat});\n            break;\n        case \"timeCat\":\n        return ReferenceData.find({name:addTime});\n        break;\n        default:\n            return {};\n      }\n   \n    \n  }\n});\n// function _saveImageFile()\n// {\n//   var result = false;\n//   var  base64Image = fbinaryData.split(\",\")[1];\n//   var binaryData = new  Buffer(base64Image,'base64').toString('binary') ;\n//   //var filename = \"/img/\" + sellerId+\"_\" + Random.id() +\".jpg\";\n//   //productImage = filename;\n//   var  imagePath = Meteor.settings.product.filePath;\n//   try\n//   {\n//   require(\"fs\").writeFile(imagePath + filename ,binaryData, \"binary\", function(err) {\n//         if (err)\n//         {\n//             console.log(err); // writes out file without error, but it's not a valid image\n//         }\n//         else\n//         {\n//           result = true;\n//         }\n//       });\n//     }\n//     catch(exp)\n//     {\n//       console.log(\"Client side File Save to server...\" + filename);\n//       result = false;\n//     }\n//     return result;\n// }"]},"sourceType":"script","hash":"da332c8a9420466894e6247379e7a05412b0c796"}
