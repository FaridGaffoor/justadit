{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/farid/Documents/Projects/Meteor/justadit/lib/product.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"lib/product.js","filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/product.js","passPerPreset":false,"envName":"development","cwd":"/Users/farid/Documents/Projects/Meteor/justadit","root":"/Users/farid/Documents/Projects/Meteor/justadit","generatorOpts":{"filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/product.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/product.js"}},"code":"Product = new Mongo.Collection('Product');\nProduct.allow({\n  insert: function (userId, doc) {\n    return doc.userId === userId;\n  }\n});\nMeteor.methods({\n  'latestProduct': function (id) {\n    return Product.find({}, {\n      order: {\n        createdAt: -1\n      }\n    }); //return result[0];\n  },\n  'QSearchProduct': function (id) {\n    console.log(\"Searching\");\n    Meteor.subscribe('QSearch', id);\n    var results = Products.find({});\n    console.log(results);\n    return results;\n  },\n  'products.insert': function (productObj) {\n    //var fs = Npm.require('fs');\n    var newProd = false;\n\n    if (productObj._id == \"\") {\n      newProd = true;\n    }\n\n    var ProdImgs = [];\n\n    try {\n      // console.log(productObj.prodImg);\n      // for (pImg in productObj.prodImg)\n      // {\n      //   if (newProd)\n      //   {\n      //     var randId = Random.id();// require('random');     \n      //     var FileName = productObj.userId + \"_\" + randId  + \".jpg\";            \n      //     ProdImgs.push(FileName);                \n      //     var busLogCall = Meteor.apply('saveImageFile',[pImg,FileName],{wait:true});                   \n      //   }\n      //   else\n      //   {\n      //     if (!fs.exists(pImg))\n      //     {\n      //       var randId = Random.id();// require('random');     \n      //       var FileName = productObj.userId + \"_\" + randId  + \".jpg\";            \n      //       ProdImgs.push(FileName);                \n      //       var busLogCall = Meteor.apply('saveImageFile',[pImg,FileName],{wait:true}); \n      //     }\n      //   }\n      // }\n      //   productObj.prodImg = ProdImgs;\n      var productResult = Products.upsert({\n        // Selector\n        _id: productObj._id\n      }, {\n        // Modifier\n        $set: {\n          sellerId: productObj.sellerId,\n          producttitle: productObj.producttitle,\n          productDescription: productObj.productDescription,\n          price: productObj.price,\n          prdCat: productObj.prdCat,\n          prodImg: productObj.prodImg,\n          createdAt: productObj.createdAt,\n          expireAt: productObj.expireAt\n        }\n      });\n    } catch (exp) {\n      throw exp;\n    }\n  }\n});\n/*\n\n\nMeteor.methods(\n    \n    {\n  'products.insert'(sellerId,producttitle, productDescription , price,prodCat,createdAt,expireAt, url,prodImg) {\n\n    var ProdInsert = Products.insert({\n      sellerId, \n      producttitle,\n      productDescription , \n      price,\n      prodCat,\n      createdAt,\n      expireAt,\n      url,\n      prodImg\n      \n  });\n  return ProdInsert;\n\n  \n}\n\n\n\n\n  Product.getProduct = function(prodId)\n  {\n    var returnProduct ;\n    console.log(\"Single product Meteor Call method\");\n    try\n    {\n        Meteor.call('getProduct',[ prodId],(error,result)=>{\n            if (error)\n            {\n                console.log(error);\n            }\n            else\n            {\n                console.log(\"Meteor Call to get product : \" + result);\n          \n                returnProduct = result;\n            }\n        });\n      \n      console.log(\"Post Meteor Call after assign \" + returnProduct);\n    }\n    catch(exp)\n    {\n      throw exp;\n    }\n    return returnProduct;\n  }\n\n   */\n\nProduct.MyProducts = function (sellerId) {\n  return Product.find({\n    SellerID: sellerId\n  });\n};\n\nProduct.more = function (continuationValue) {\n  //https://www.npmjs.com/package/mongo-cursor-pagination\n  //Product.find({},{order:{createdAt:-1}});\n  return Product.find({}, {\n    order: {\n      createdAt: -1\n    }\n  });\n};\n/*\nMeteor.methods({\n  createActivity: function(activity, tweet, loc) {\n    Meteor.userId(), String,\n    activity, {\n      recipeName: String,\n      text: String,\n      image: String\n    },\n    tweet, Boolean,\n    loc, Match.OneOf(Object, null),\n    \n    activity.userId = Meteor.userId(,\n    activity.userAvatar = Meteor.user().services.twitter.profile_image_url_https;\n    activity.userName = Meteor.user().profile.name;\n    activity.date = new Date;\n    \n    if (! this.isSimulation && loc)\n      activity.place = getLocationPlace(loc,\n    \n    var id = Activities.insert(activity,\n    \n    if (! this.isSimulation && tweet)\n      tweetActivity(activity,\n    \n    return id;\n  }\n},\n\nif (Meteor.isServer) {\n  var twitterOauth = function(options) {\n    var config = Meteor.settings.twitter\n    var userConfig = Meteor.user().services.twitter;\n\n    return {\n      consumer_key: config.consumerKey,\n      consumer_secret: config.secret,\n      token: userConfig.accessToken,\n      token_secret: userConfig.accessTokenSecret\n    };\n  }\n  \n  var tweetActivity = function(activity) {\n    // creates the tweet text, optionally truncating to fit the appended text\n    function appendTweet(text, append) {\n      var MAX = 117; // Max size of tweet with image attached\n      \n      if ((text + append).length > MAX)\n        return text.substring(0, (MAX - append.length - 3)) + '...' + append;\n      else\n        return text + append;\n    }\n    \n    // we need to strip the \"data:image/jpeg;base64,\" bit off the data url\n    var image = activity.image.replace(/^data.*base64,/, '',\n\n    var response = HTTP.post(\n      'https://upload.twitter.com/1.1/media/upload.json', {\n        params: { media: image },\n        npmRequestOptions: { oauth: twitterOauth() }\n      }\n    ,\n    \n    if (response.statusCode !== 200)\n      throw new Meteor.Error(500, 'Unable to post image to twitter',\n\n    if (! response.data)\n      throw new Meteor.Error(500, 'Did not receive attachment from twitter',\n\n    var attachment = response.data;\n\n    response = HTTP.post(\n      'https://api.twitter.com/1.1/statuses/update.json', {\n        params: {\n          status: appendTweet(activity.text, ' #localmarket'),\n          media_ids: attachment.media_id_string\n        },\n        npmRequestOptions: { oauth: twitterOauth() }\n      }\n    ,\n\n    if (response.statusCode !== 200)\n      throw new Meteor.Error(500, 'Unable to create tweet',\n  }\n  \n  var getLocationPlace = function(loc) {\n    var url = 'https://api.twitter.com/1.1/geo/reverse_geocode.json'\n      + '?granularity=neighborhood'\n      + '&max_results=1'\n      + '&accuracy=' + loc.coords.accuracy\n      + '&lat=' + loc.coords.latitude\n      + '&long=' + loc.coords.longitude;\n    \n    var response = HTTP.get(url,\n                            {npmRequestOptions: { oauth: twitterOauth() } },\n\n    if (response.statusCode === 200 && response.data) {\n      var place = _.find(response.data.result.places, function(place) {\n        return place.place_type === 'neighborhood';\n      },\n      \n      return place && place.full_name;\n    }\n  }\n}\n \n*/","map":{"version":3,"sources":["lib/product.js"],"names":["Product","Mongo","Collection","allow","insert","userId","doc","Meteor","methods","id","find","order","createdAt","console","log","subscribe","results","Products","productObj","newProd","_id","ProdImgs","productResult","upsert","$set","sellerId","producttitle","productDescription","price","prdCat","prodImg","expireAt","exp","MyProducts","SellerID","more","continuationValue"],"mappings":"AAAAA,UAAU,IAAIC,MAAMC,UAAV,CAAqB,SAArB,CAAV;AAEAF,QAAQG,KAAR,CAAc;AACVC,UAAQ,UAASC,MAAT,EAAiBC,GAAjB,EAAsB;AAC5B,WAAOA,IAAID,MAAJ,KAAeA,MAAtB;AACD;AAHS,CAAd;AAOEE,OAAOC,OAAP,CAAe;AACb,mBAAgB,UAASC,EAAT,EAAY;AAE1B,WAAOT,QAAQU,IAAR,CAAa,EAAb,EAAgB;AAACC,aAAM;AAACC,mBAAU,CAAC;AAAZ;AAAP,KAAhB,CAAP,CAF0B,CAG1B;AACD,GALY;AAMb,oBAAiB,UAASH,EAAT,EAAY;AAC3BI,YAAQC,GAAR,CAAY,WAAZ;AACAP,WAAOQ,SAAP,CAAiB,SAAjB,EAA4BN,EAA5B;AACA,QAAIO,UAAWC,SAASP,IAAT,CAAc,EAAd,CAAf;AACAG,YAAQC,GAAR,CAAYE,OAAZ;AACA,WAAOA,OAAP;AAED,GAbY;AAcb,qBAAkB,UAAUE,UAAV,EAClB;AACI;AACA,QAAIC,UAAU,KAAd;;AACA,QAAID,WAAWE,GAAX,IAAkB,EAAtB,EACA;AACID,gBAAU,IAAV;AACH;;AACD,QAAIE,WAAW,EAAf;;AACF,QACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACE,UAAIC,gBACJL,SAASM,MAAT,CAAgB;AAChB;AACAH,aAAKF,WAAWE;AAFA,OAAhB,EAGG;AACH;AACAI,cAAM;AACJC,oBAAWP,WAAWO,QADlB;AAEJC,wBAAeR,WAAWQ,YAFtB;AAGJC,8BAAqBT,WAAWS,kBAH5B;AAIJC,iBAAQV,WAAWU,KAJf;AAKJC,kBAASX,WAAWW,MALhB;AAMJC,mBAAUZ,WAAWY,OANjB;AAOJlB,qBAAYM,WAAWN,SAPnB;AAQJmB,oBAAWb,WAAWa;AARlB;AAFH,OAHH,CADA;AAqBH,KA9CD,CA+CA,OAAOC,GAAP,EACA;AACE,YAAMA,GAAN;AACD;AACF;AA1EY,CAAf;AA6EF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DEhC,QAAQiC,UAAR,GAAoB,UAASR,QAAT,EAAkB;AAClC,SAAOzB,QAAQU,IAAR,CAAa;AAACwB,cAAST;AAAV,GAAb,CAAP;AACH,CAFD;;AAIAzB,QAAQmC,IAAR,GAAe,UAASC,iBAAT,EAA2B;AACtC;AACA;AACA,SAAOpC,QAAQU,IAAR,CAAa,EAAb,EAAiB;AAACC,WAAO;AAACC,iBAAW,CAAC;AAAb;AAAR,GAAjB,CAAP;AAEH,CALD;AAQA","sourcesContent":["Product = new Mongo.Collection('Product');\n\nProduct.allow({\n    insert: function(userId, doc) {\n      return doc.userId === userId;\n    }\n  });\n  \n \n  Meteor.methods({\n    'latestProduct':function(id){\n     \n      return Product.find({},{order:{createdAt:-1}});\n      //return result[0];\n    },\n    'QSearchProduct':function(id){\n      console.log(\"Searching\");\n      Meteor.subscribe('QSearch', id);\n      var results =  Products.find({});\n      console.log(results); \n      return results;\n      \n    },\n    'products.insert':function (productObj)\n    {\n        //var fs = Npm.require('fs');\n        var newProd = false;\n        if (productObj._id == \"\")\n        {\n            newProd = true;\n        }\n        var ProdImgs = [];\n      try \n      {\n        // console.log(productObj.prodImg);\n        // for (pImg in productObj.prodImg)\n        // {\n        //   if (newProd)\n        //   {\n        //     var randId = Random.id();// require('random');     \n        //     var FileName = productObj.userId + \"_\" + randId  + \".jpg\";            \n        //     ProdImgs.push(FileName);                \n        //     var busLogCall = Meteor.apply('saveImageFile',[pImg,FileName],{wait:true});                   \n        //   }\n        //   else\n        //   {\n        //     if (!fs.exists(pImg))\n        //     {\n        //       var randId = Random.id();// require('random');     \n        //       var FileName = productObj.userId + \"_\" + randId  + \".jpg\";            \n        //       ProdImgs.push(FileName);                \n        //       var busLogCall = Meteor.apply('saveImageFile',[pImg,FileName],{wait:true}); \n        //     }\n\n        //   }\n        // }\n        //   productObj.prodImg = ProdImgs;\n          var productResult = \n          Products.upsert({\n          // Selector\n          _id: productObj._id \n          }, {\n          // Modifier\n          $set: {\n            sellerId : productObj.sellerId,\n            producttitle : productObj.producttitle,\n            productDescription : productObj.productDescription,\n            price : productObj.price,\n            prdCat : productObj.prdCat,\n            prodImg : productObj.prodImg,\n            createdAt : productObj.createdAt,\n            expireAt : productObj.expireAt\n            \n           \n          \n          }\n          });\n\n      }\n      catch (exp)\n      {\n        throw exp;\n      }\n    }\n  });\n\n/*\n\n\nMeteor.methods(\n    \n    {\n  'products.insert'(sellerId,producttitle, productDescription , price,prodCat,createdAt,expireAt, url,prodImg) {\n\n    var ProdInsert = Products.insert({\n      sellerId, \n      producttitle,\n      productDescription , \n      price,\n      prodCat,\n      createdAt,\n      expireAt,\n      url,\n      prodImg\n      \n  });\n  return ProdInsert;\n\n  \n}\n\n\n\n\n  Product.getProduct = function(prodId)\n  {\n    var returnProduct ;\n    console.log(\"Single product Meteor Call method\");\n    try\n    {\n        Meteor.call('getProduct',[ prodId],(error,result)=>{\n            if (error)\n            {\n                console.log(error);\n            }\n            else\n            {\n                console.log(\"Meteor Call to get product : \" + result);\n          \n                returnProduct = result;\n            }\n        });\n      \n      console.log(\"Post Meteor Call after assign \" + returnProduct);\n    }\n    catch(exp)\n    {\n      throw exp;\n    }\n    return returnProduct;\n  }\n\n   */\n\n  Product.MyProducts= function(sellerId){\n      return Product.find({SellerID:sellerId});\n  }\n\n  Product.more = function(continuationValue){\n      //https://www.npmjs.com/package/mongo-cursor-pagination\n      //Product.find({},{order:{createdAt:-1}});\n      return Product.find({}, {order: {createdAt: -1}});\n    \n  } \n\n   \n  /*\n  Meteor.methods({\n    createActivity: function(activity, tweet, loc) {\n      Meteor.userId(), String,\n      activity, {\n        recipeName: String,\n        text: String,\n        image: String\n      },\n      tweet, Boolean,\n      loc, Match.OneOf(Object, null),\n      \n      activity.userId = Meteor.userId(,\n      activity.userAvatar = Meteor.user().services.twitter.profile_image_url_https;\n      activity.userName = Meteor.user().profile.name;\n      activity.date = new Date;\n      \n      if (! this.isSimulation && loc)\n        activity.place = getLocationPlace(loc,\n      \n      var id = Activities.insert(activity,\n      \n      if (! this.isSimulation && tweet)\n        tweetActivity(activity,\n      \n      return id;\n    }\n  },\n  \n  if (Meteor.isServer) {\n    var twitterOauth = function(options) {\n      var config = Meteor.settings.twitter\n      var userConfig = Meteor.user().services.twitter;\n  \n      return {\n        consumer_key: config.consumerKey,\n        consumer_secret: config.secret,\n        token: userConfig.accessToken,\n        token_secret: userConfig.accessTokenSecret\n      };\n    }\n    \n    var tweetActivity = function(activity) {\n      // creates the tweet text, optionally truncating to fit the appended text\n      function appendTweet(text, append) {\n        var MAX = 117; // Max size of tweet with image attached\n        \n        if ((text + append).length > MAX)\n          return text.substring(0, (MAX - append.length - 3)) + '...' + append;\n        else\n          return text + append;\n      }\n      \n      // we need to strip the \"data:image/jpeg;base64,\" bit off the data url\n      var image = activity.image.replace(/^data.*base64,/, '',\n  \n      var response = HTTP.post(\n        'https://upload.twitter.com/1.1/media/upload.json', {\n          params: { media: image },\n          npmRequestOptions: { oauth: twitterOauth() }\n        }\n      ,\n      \n      if (response.statusCode !== 200)\n        throw new Meteor.Error(500, 'Unable to post image to twitter',\n  \n      if (! response.data)\n        throw new Meteor.Error(500, 'Did not receive attachment from twitter',\n  \n      var attachment = response.data;\n  \n      response = HTTP.post(\n        'https://api.twitter.com/1.1/statuses/update.json', {\n          params: {\n            status: appendTweet(activity.text, ' #localmarket'),\n            media_ids: attachment.media_id_string\n          },\n          npmRequestOptions: { oauth: twitterOauth() }\n        }\n      ,\n  \n      if (response.statusCode !== 200)\n        throw new Meteor.Error(500, 'Unable to create tweet',\n    }\n    \n    var getLocationPlace = function(loc) {\n      var url = 'https://api.twitter.com/1.1/geo/reverse_geocode.json'\n        + '?granularity=neighborhood'\n        + '&max_results=1'\n        + '&accuracy=' + loc.coords.accuracy\n        + '&lat=' + loc.coords.latitude\n        + '&long=' + loc.coords.longitude;\n      \n      var response = HTTP.get(url,\n                              {npmRequestOptions: { oauth: twitterOauth() } },\n  \n      if (response.statusCode === 200 && response.data) {\n        var place = _.find(response.data.result.places, function(place) {\n          return place.place_type === 'neighborhood';\n        },\n        \n        return place && place.full_name;\n      }\n    }\n  }\n   \n  */"]},"sourceType":"script","hash":"9670e47cade879dca92e1b830adf02044775f9e4"}
