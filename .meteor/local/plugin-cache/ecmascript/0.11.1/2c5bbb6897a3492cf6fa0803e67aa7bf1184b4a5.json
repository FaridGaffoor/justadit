{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/farid/Documents/Projects/Meteor/justadit/lib/products.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"lib/products.js","filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/products.js","passPerPreset":false,"envName":"development","cwd":"/Users/farid/Documents/Projects/Meteor/justadit","root":"/Users/farid/Documents/Projects/Meteor/justadit","generatorOpts":{"filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/products.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/products.js"}},"code":"Products = new Mongo.Collection('Products');\nProducts.allow({\n  insert: function (userId, doc) {\n    return doc.userId === userId;\n  },\n  update: function (userId, doc) {\n    return false;\n  }\n});\nMeteor.methods({\n  'featuredProducts': function () {\n    console.log(\"Getting Latest featured products data \" + Meteor.settings.featuredProductsLimit);\n    var prodresult = [];\n\n    try {\n      var prod = Products.find({}, {\n        order: {\n          createdAt: -1\n        }\n      }, {\n        limit: Meteor.settings.featuredProductsLimit\n      });\n      prod.forEach(element => {\n        prodresult.push(element);\n      });\n    } catch (exp) {\n      console.log(\"Error getting featured Products : \" + exp);\n      throw exp;\n    }\n\n    return {\n      Results: prodresult\n    };\n  },\n  'getProduct': function (prodid) {\n    // var result = Products.find({_id:prodid});\n    try {\n      //Meteor.subscribe('product',prodid);\n      //Meteor.subscribe('getSellers');\n      var prod = Products.findOne({\n        _id: prodid\n      });\n\n      if (prod) {\n        var sell = Sellers.findOne({\n          userId: prod.sellerId\n        });\n        var prodImages = Meteor.apply('getProductImages', [prod.prodImg], {\n          returnStubValue: true\n        });\n        prod.seller = sell;\n        prod.prodImgs = prodImages;\n      } //loading.stop();\n\n\n      return prod;\n    } catch (exp) {\n      //loading.halt();\n      console.log(exp);\n    } //return Meteor.Mongo.Products.findOne({_id:prodid});\n\n  },\n  'getProductSeller': function (sellerId) {\n    Meteor.subscribe('getSeller', sellerId);\n    return Sellers.findOne({\n      userId: Meteor.userId()\n    });\n  },\n  'QSearchProducts': function (searchItem) {\n    //debugger;\n    var searchTerms = \"'/^.*\" + searchItem[0] + \".*$/i'\";\n    console.log(searchTerms); //$text: {$search: searchValue} },\n\n    var prods = Products.find({\n      $or: [{\n        \"producttitle\": {\n          $regex: searchTerms\n        }\n      }, {\n        \"productDescrption\": {\n          $regex: searchTerms\n        }\n      }]\n    });\n    var result = [];\n    prods.forEach(element => {\n      result.push(element);\n    }); //var result = Products.find({$text: {$search: searchTerms}}).fetch();\n    //({$text:{$search:\"tutorialspoint\"}})\n\n    console.log(result);\n    return result;\n  },\n  'getSellerProducts': function () {\n    console.log(\"Getting Seller Server Side Products\");\n    var prodresult = []; //Product.find({},{order:{createdAt:-1}});\n\n    var prod = Products.find({\n      sellerId: Meteor.userId()\n    }, {\n      order: {\n        createdAt: -1\n      }\n    });\n    prod.forEach(element => {\n      //console.log(element);\n      prodresult.push(element);\n    });\n    return prodresult;\n  }\n});\n\nProducts.allProducts = function () {\n  console.log(\"Getting latest products\" + Products.count());\n  Meteor.subscribe('allProducts');\n  return Products.find({}, {\n    order: {\n      createdAt: -1\n    }\n  }); // return Products.find({});\n};\n\nProducts.getProduct = function (prodId) {\n  var result;\n  console.log(\"Single product api method\");\n\n  try {\n    result = Products.findOne({\n      _id: prodId\n    }, {\n      limit: 1\n    }); //console.log(result.producttitle);\n  } catch (exp) {\n    throw exp;\n  }\n\n  return result;\n};\n\nProducts.bookedMarked = function () {// here get all my userid Booked marked products and then get each prod and push to array and return the array.\n};\n\nProducts.latestProducts = function () {\n  var result;\n  console.log(\"Api method\");\n\n  try {\n    //Product.find({},{order:{createdAt:-1}});\n    result = Products.find({}, {\n      order: {\n        createdAt: -1\n      }\n    });\n  } catch (exp) {\n    throw exp;\n  }\n\n  return result; //Products.find({}, {sort: {createdAt: -1}, limit: 1});\n};\n\nProducts.MyProducts = function (SellerId) {\n  //Product.find({},{order:{createdAt:-1}});\n  return Products.find({\n    sellerId: SellerId\n  }, {\n    order: {\n      createdAt: -1\n    }\n  });\n  ;\n}; // Products.featuredProducts = function () {\n//   var result = [];\n//   console.log(\"Api method featuredProducts \");\n//   //Meteor.settings.featuredProductsLimit \n//   try {\n//     //result = Products.find({},{sort: {createdAt:1}, limit: 4});\n//     //console.log(result);\n//   }\n//   catch (exp) {\n//     throw exp;\n//   }\n//   return result;//Products.find({}, {sort: {createdAt: -1}, limit: 1});\n//   // var ctr = Meteor.settings.featuredProductsLimit;\n//   // console.log(\"Api Method featured : \" +  ctr);\n//   // var result = Products.find({},{sort:{createdAt:1},limit: 2});//Meteor.settings.featuredProductsLimit}); \n//   // return result;// Products.find({},{sort:{createdAt:1},limit: 2});//Meteor.settings.featuredProductsLimit});\n// }\n\n\nProducts.more = function (continuationValue) {\n  //https://www.npmjs.com/package/mongo-cursor-pagination\n  return Products.find().sort({\n    createdAt: -1\n  }).limit(12).skip(continuationValue);\n};\n\nMeteor.methods({\n  createProduct: function (product, loc) {\n    check(product, {\n      sellerId: String,\n      producttitle: String,\n      productDescription: String,\n      price: Number,\n      prodCat: String,\n      url: String\n    }, loc, Match.OneOf(Object, null));\n    product.sellerId = Meteor.userId;\n    product.createDate = new Date();\n    product.expireDate = require(\"moment\");\n    var ProdInsert = Products.insert({\n      sellerId,\n      producttitle,\n      productDescription,\n      price,\n      prodCat,\n      createdAt,\n      expireAt,\n      url,\n      prodImg\n    });\n    return ProdInsert;\n  }\n});\n/*\nMeteor.methods({\n  createActivity: function(activity, tweet, loc) {\n    Meteor.userId(), String,\n    activity, {\n      recipeName: String,\n      text: String,\n      image: String\n    },\n    tweet, Boolean,\n    loc, Match.OneOf(Object, null),\n    \n    activity.userId = Meteor.userId(,\n    activity.userAvatar = Meteor.user().services.twitter.profile_image_url_https;\n    activity.userName = Meteor.user().profile.name;\n    activity.date = new Date;\n    \n    if (! this.isSimulation && loc)\n      activity.place = getLocationPlace(loc,\n    \n    var id = Activities.insert(activity,\n    \n    if (! this.isSimulation && tweet)\n      tweetActivity(activity,\n    \n    return id;\n  }\n},\n\nif (Meteor.isServer) {\n  var twitterOauth = function(options) {\n    var config = Meteor.settings.twitter\n    var userConfig = Meteor.user().services.twitter;\n\n    return {\n      consumer_key: config.consumerKey,\n      consumer_secret: config.secret,\n      token: userConfig.accessToken,\n      token_secret: userConfig.accessTokenSecret\n    };\n  }\n  \n  var tweetActivity = function(activity) {\n    // creates the tweet text, optionally truncating to fit the appended text\n    function appendTweet(text, append) {\n      var MAX = 117; // Max size of tweet with image attached\n      \n      if ((text + append).length > MAX)\n        return text.substring(0, (MAX - append.length - 3)) + '...' + append;\n      else\n        return text + append;\n    }\n    \n    // we need to strip the \"data:image/jpeg;base64,\" bit off the data url\n    var image = activity.image.replace(/^data.*base64,/, '',\n\n    var response = HTTP.post(\n      'https://upload.twitter.com/1.1/media/upload.json', {\n        params: { media: image },\n        npmRequestOptions: { oauth: twitterOauth() }\n      }\n    ,\n    \n    if (response.statusCode !== 200)\n      throw new Meteor.Error(500, 'Unable to post image to twitter',\n\n    if (! response.data)\n      throw new Meteor.Error(500, 'Did not receive attachment from twitter',\n\n    var attachment = response.data;\n\n    response = HTTP.post(\n      'https://api.twitter.com/1.1/statuses/update.json', {\n        params: {\n          status: appendTweet(activity.text, ' #localmarket'),\n          media_ids: attachment.media_id_string\n        },\n        npmRequestOptions: { oauth: twitterOauth() }\n      }\n    ,\n\n    if (response.statusCode !== 200)\n      throw new Meteor.Error(500, 'Unable to create tweet',\n  }\n  \n  var getLocationPlace = function(loc) {\n    var url = 'https://api.twitter.com/1.1/geo/reverse_geocode.json'\n      + '?granularity=neighborhood'\n      + '&max_results=1'\n      + '&accuracy=' + loc.coords.accuracy\n      + '&lat=' + loc.coords.latitude\n      + '&long=' + loc.coords.longitude;\n    \n    var response = HTTP.get(url,\n                            {npmRequestOptions: { oauth: twitterOauth() } },\n\n    if (response.statusCode === 200 && response.data) {\n      var place = _.find(response.data.result.places, function(place) {\n        return place.place_type === 'neighborhood';\n      },\n      \n      return place && place.full_name;\n    }\n  }\n}\n \n*/","map":{"version":3,"sources":["lib/products.js"],"names":["Products","Mongo","Collection","allow","insert","userId","doc","update","Meteor","methods","console","log","settings","featuredProductsLimit","prodresult","prod","find","order","createdAt","limit","forEach","element","push","exp","Results","prodid","findOne","_id","sell","Sellers","sellerId","prodImages","apply","prodImg","returnStubValue","seller","prodImgs","subscribe","searchItem","searchTerms","prods","$or","$regex","result","allProducts","count","getProduct","prodId","bookedMarked","latestProducts","MyProducts","SellerId","more","continuationValue","sort","skip","createProduct","product","loc","check","String","producttitle","productDescription","price","Number","prodCat","url","Match","OneOf","Object","createDate","Date","expireDate","require","ProdInsert","expireAt"],"mappings":"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","sourcesContent":["Products = new Mongo.Collection('Products');\n\n\n\nProducts.allow({\n  insert: function (userId, doc) {\n    return doc.userId === userId;\n  },\n  update:function(userId,doc)\n  {\n    return false;\n  }\n});\n\n\nMeteor.methods({\n  'featuredProducts': function () {\n    \n    console.log(\"Getting Latest featured products data \" + Meteor.settings.featuredProductsLimit);\n \n \n    var prodresult = [];\n    try\n    {\n    \n    var prod = Products.find({},{order:{createdAt: -1}},{limit: Meteor.settings.featuredProductsLimit});\n   \n    prod.forEach(element => {\n \n      prodresult.push(element);\n    });\n  }\n  catch(exp)\n  {\n    console.log(\"Error getting featured Products : \" + exp);\n    throw exp;\n  }\n      \n \n    return {Results:prodresult};\n  },\n  'getProduct': function (prodid) {\n    // var result = Products.find({_id:prodid});\n    try\n    {\n     \n      //Meteor.subscribe('product',prodid);\n      //Meteor.subscribe('getSellers');\n     \n    var prod = Products.findOne({ _id: prodid });\n    if (prod)\n    {\n      var sell = Sellers.findOne({userId:prod.sellerId});\n      var prodImages = Meteor.apply('getProductImages', [prod.prodImg], { returnStubValue: true });\n      prod.seller = sell;\n      prod.prodImgs = prodImages;\n    }\n    //loading.stop();\n    return prod;\n    }\n    catch (exp)\n    {\n      //loading.halt();\n      console.log(exp);\n    }\n\n    //return Meteor.Mongo.Products.findOne({_id:prodid});\n  },\n  \n  'getProductSeller': function (sellerId) {\n    Meteor.subscribe('getSeller',sellerId);\n    return Sellers.findOne({ userId: Meteor.userId() });\n  },\n  'QSearchProducts' : function (searchItem)\n  {\n    //debugger;\n    var searchTerms = \"'/^.*\" + searchItem[0] + \".*$/i'\";\n    console.log(searchTerms);\n    //$text: {$search: searchValue} },\n    var prods = Products.find({$or:[{\"producttitle\":{$regex:searchTerms}} , {\"productDescrption\":{$regex:searchTerms}}]});\n    var result = [];\n    prods.forEach(element => {\n      result.push(element);\n    });\n    //var result = Products.find({$text: {$search: searchTerms}}).fetch();\n    //({$text:{$search:\"tutorialspoint\"}})\n    \n    console.log(result);\n    return result;\n  },\n  'getSellerProducts': function () {\n    console.log(\"Getting Seller Server Side Products\");\n\n    var prodresult = [];\n\n    //Product.find({},{order:{createdAt:-1}});\n    var prod = Products.find({sellerId:Meteor.userId()},{order:{createdAt: -1}});\n    prod.forEach(element => {\n      //console.log(element);\n      prodresult.push(element);\n    });\n\n    return prodresult;\n  }\n\n});\n\nProducts.allProducts = function () {\n  console.log(\"Getting latest products\" + Products.count());\n  Meteor.subscribe('allProducts');\n  return Products.find({},{order:{createdAt: -1}});\n  // return Products.find({});\n}\nProducts.getProduct = function (prodId) {\n  var result;\n  console.log(\"Single product api method\");\n  try {\n    result = Products.findOne({ _id: prodId }, { limit: 1 });\n    //console.log(result.producttitle);\n  }\n  catch (exp) {\n    throw exp;\n  }\n  return result;\n}\n\nProducts.bookedMarked = function () {\n  // here get all my userid Booked marked products and then get each prod and push to array and return the array.\n}\n\nProducts.latestProducts = function () {\n  var result;\n  console.log(\"Api method\");\n  try {\n    //Product.find({},{order:{createdAt:-1}});\n    result = Products.find({},{order:{createdAt: -1}});\n\n  }\n  catch (exp) {\n    throw exp;\n  }\n\n\n  return result;//Products.find({}, {sort: {createdAt: -1}, limit: 1});\n\n\n}\n\nProducts.MyProducts = function (SellerId) {\n  //Product.find({},{order:{createdAt:-1}});\n  return Products.find({ sellerId: SellerId },{order:{createdAt: -1}});;\n}\n\n// Products.featuredProducts = function () {\n\n \n//   var result = [];\n//   console.log(\"Api method featuredProducts \");\n//   //Meteor.settings.featuredProductsLimit \n//   try {\n//     //result = Products.find({},{sort: {createdAt:1}, limit: 4});\n//     //console.log(result);\n\n//   }\n//   catch (exp) {\n//     throw exp;\n//   }\n\n\n//   return result;//Products.find({}, {sort: {createdAt: -1}, limit: 1});\n\n\n//   // var ctr = Meteor.settings.featuredProductsLimit;\n//   // console.log(\"Api Method featured : \" +  ctr);\n//   // var result = Products.find({},{sort:{createdAt:1},limit: 2});//Meteor.settings.featuredProductsLimit}); \n//   // return result;// Products.find({},{sort:{createdAt:1},limit: 2});//Meteor.settings.featuredProductsLimit});\n// }\n\nProducts.more = function (continuationValue) {\n  //https://www.npmjs.com/package/mongo-cursor-pagination\n  return Products.find().sort({createdAt:-1}).limit(12).skip(continuationValue);\n\n}\n\nMeteor.methods({\n  createProduct: function (product, loc) {\n    check(product, {\n      sellerId: String,\n      producttitle: String,\n      productDescription: String,\n      price: Number,\n      prodCat: String,\n      url: String\n    },\n      loc, Match.OneOf(Object, null));\n\n    product.sellerId = Meteor.userId;\n    product.createDate = new Date;\n    product.expireDate = require(\"moment\");\n    var ProdInsert = Products.insert({\n      sellerId,\n      producttitle,\n      productDescription,\n      price,\n      prodCat,\n      createdAt,\n      expireAt,\n      url,\n      prodImg\n\n    });\n    return ProdInsert;\n\n  },\n\n});\n  /*\n  Meteor.methods({\n    createActivity: function(activity, tweet, loc) {\n      Meteor.userId(), String,\n      activity, {\n        recipeName: String,\n        text: String,\n        image: String\n      },\n      tweet, Boolean,\n      loc, Match.OneOf(Object, null),\n      \n      activity.userId = Meteor.userId(,\n      activity.userAvatar = Meteor.user().services.twitter.profile_image_url_https;\n      activity.userName = Meteor.user().profile.name;\n      activity.date = new Date;\n      \n      if (! this.isSimulation && loc)\n        activity.place = getLocationPlace(loc,\n      \n      var id = Activities.insert(activity,\n      \n      if (! this.isSimulation && tweet)\n        tweetActivity(activity,\n      \n      return id;\n    }\n  },\n  \n  if (Meteor.isServer) {\n    var twitterOauth = function(options) {\n      var config = Meteor.settings.twitter\n      var userConfig = Meteor.user().services.twitter;\n  \n      return {\n        consumer_key: config.consumerKey,\n        consumer_secret: config.secret,\n        token: userConfig.accessToken,\n        token_secret: userConfig.accessTokenSecret\n      };\n    }\n    \n    var tweetActivity = function(activity) {\n      // creates the tweet text, optionally truncating to fit the appended text\n      function appendTweet(text, append) {\n        var MAX = 117; // Max size of tweet with image attached\n        \n        if ((text + append).length > MAX)\n          return text.substring(0, (MAX - append.length - 3)) + '...' + append;\n        else\n          return text + append;\n      }\n      \n      // we need to strip the \"data:image/jpeg;base64,\" bit off the data url\n      var image = activity.image.replace(/^data.*base64,/, '',\n  \n      var response = HTTP.post(\n        'https://upload.twitter.com/1.1/media/upload.json', {\n          params: { media: image },\n          npmRequestOptions: { oauth: twitterOauth() }\n        }\n      ,\n      \n      if (response.statusCode !== 200)\n        throw new Meteor.Error(500, 'Unable to post image to twitter',\n  \n      if (! response.data)\n        throw new Meteor.Error(500, 'Did not receive attachment from twitter',\n  \n      var attachment = response.data;\n  \n      response = HTTP.post(\n        'https://api.twitter.com/1.1/statuses/update.json', {\n          params: {\n            status: appendTweet(activity.text, ' #localmarket'),\n            media_ids: attachment.media_id_string\n          },\n          npmRequestOptions: { oauth: twitterOauth() }\n        }\n      ,\n  \n      if (response.statusCode !== 200)\n        throw new Meteor.Error(500, 'Unable to create tweet',\n    }\n    \n    var getLocationPlace = function(loc) {\n      var url = 'https://api.twitter.com/1.1/geo/reverse_geocode.json'\n        + '?granularity=neighborhood'\n        + '&max_results=1'\n        + '&accuracy=' + loc.coords.accuracy\n        + '&lat=' + loc.coords.latitude\n        + '&long=' + loc.coords.longitude;\n      \n      var response = HTTP.get(url,\n                              {npmRequestOptions: { oauth: twitterOauth() } },\n  \n      if (response.statusCode === 200 && response.data) {\n        var place = _.find(response.data.result.places, function(place) {\n          return place.place_type === 'neighborhood';\n        },\n        \n        return place && place.full_name;\n      }\n    }\n  }\n   \n  */"]},"sourceType":"script","hash":"2c5bbb6897a3492cf6fa0803e67aa7bf1184b4a5"}
