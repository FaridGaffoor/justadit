{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/farid/Documents/Projects/Meteor/justadit/lib/bookmarks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"lib/bookmarks.js","filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/bookmarks.js","passPerPreset":false,"envName":"development","cwd":"/Users/farid/Documents/Projects/Meteor/justadit","root":"/Users/farid/Documents/Projects/Meteor/justadit","generatorOpts":{"filename":"/Users/farid/Documents/Projects/Meteor/justadit/lib/bookmarks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/bookmarks.js"}},"code":"BookmarkCounts = new Mongo.Collection('bookmarkCounts');\nMeteor.methods({\n  'bookmarkRecipe': function (recipeName) {\n    check(this.userId, String);\n    check(recipeName, String);\n    var affected = Meteor.users.update({\n      _id: this.userId,\n      bookmarkedRecipeNames: {\n        $ne: recipeName\n      }\n    }, {\n      $addToSet: {\n        bookmarkedRecipeNames: recipeName\n      }\n    });\n    if (affected) BookmarkCounts.update({\n      recipeName: recipeName\n    }, {\n      $inc: {\n        count: 1\n      }\n    });\n  },\n  'unbookmarkRecipe': function (recipeName) {\n    check(this.userId, String);\n    check(recipeName, String);\n    var affected = Meteor.users.update({\n      _id: this.userId,\n      bookmarkedRecipeNames: recipeName\n    }, {\n      $pull: {\n        bookmarkedRecipeNames: recipeName\n      }\n    });\n    if (affected) BookmarkCounts.update({\n      recipeName: recipeName\n    }, {\n      $inc: {\n        count: -1\n      }\n    });\n  }\n}); // Initialize bookmark counts. We could use upsert instead.\n\nif (Meteor.isServer && BookmarkCounts.find().count() === 0) {\n  Meteor.startup(function () {\n    _.each(RecipesData, function (recipe, recipeName) {\n      BookmarkCounts.insert({\n        recipeName: recipeName,\n        count: 0\n      });\n    });\n  });\n}","map":{"version":3,"sources":["lib/bookmarks.js"],"names":["BookmarkCounts","Mongo","Collection","Meteor","methods","recipeName","check","userId","String","affected","users","update","_id","bookmarkedRecipeNames","$ne","$addToSet","$inc","count","$pull","isServer","find","startup","_","each","RecipesData","recipe","insert"],"mappings":"AAAAA,iBAAiB,IAAIC,MAAMC,UAAV,CAAqB,gBAArB,CAAjB;AAEAC,OAAOC,OAAP,CAAe;AACb,oBAAkB,UAASC,UAAT,EAAqB;AACrCC,UAAM,KAAKC,MAAX,EAAmBC,MAAnB;AACAF,UAAMD,UAAN,EAAkBG,MAAlB;AAEA,QAAIC,WAAWN,OAAOO,KAAP,CAAaC,MAAb,CAAoB;AACjCC,WAAK,KAAKL,MADuB;AAEjCM,6BAAuB;AAACC,aAAKT;AAAN;AAFU,KAApB,EAGZ;AACDU,iBAAW;AAACF,+BAAuBR;AAAxB;AADV,KAHY,CAAf;AAOA,QAAII,QAAJ,EACET,eAAeW,MAAf,CAAsB;AAACN,kBAAYA;AAAb,KAAtB,EAAgD;AAACW,YAAM;AAACC,eAAO;AAAR;AAAP,KAAhD;AACH,GAdY;AAgBb,sBAAoB,UAASZ,UAAT,EAAqB;AACvCC,UAAM,KAAKC,MAAX,EAAmBC,MAAnB;AACAF,UAAMD,UAAN,EAAkBG,MAAlB;AAEA,QAAIC,WAAWN,OAAOO,KAAP,CAAaC,MAAb,CAAoB;AACjCC,WAAK,KAAKL,MADuB;AAEjCM,6BAAuBR;AAFU,KAApB,EAGZ;AACDa,aAAO;AAACL,+BAAuBR;AAAxB;AADN,KAHY,CAAf;AAOA,QAAII,QAAJ,EACET,eAAeW,MAAf,CAAsB;AAACN,kBAAYA;AAAb,KAAtB,EAAgD;AAACW,YAAM;AAACC,eAAO,CAAC;AAAT;AAAP,KAAhD;AACH;AA7BY,CAAf,E,CAgCA;;AACA,IAAId,OAAOgB,QAAP,IAAmBnB,eAAeoB,IAAf,GAAsBH,KAAtB,OAAkC,CAAzD,EAA4D;AAC1Dd,SAAOkB,OAAP,CAAe,YAAW;AACxBC,MAAEC,IAAF,CAAOC,WAAP,EAAoB,UAASC,MAAT,EAAiBpB,UAAjB,EAA6B;AAC/CL,qBAAe0B,MAAf,CAAsB;AAACrB,oBAAYA,UAAb;AAAyBY,eAAO;AAAhC,OAAtB;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["BookmarkCounts = new Mongo.Collection('bookmarkCounts');\n\nMeteor.methods({\n  'bookmarkRecipe': function(recipeName) {\n    check(this.userId, String);\n    check(recipeName, String);\n\n    var affected = Meteor.users.update({\n      _id: this.userId,\n      bookmarkedRecipeNames: {$ne: recipeName}\n    }, {\n      $addToSet: {bookmarkedRecipeNames: recipeName}\n    });\n\n    if (affected)\n      BookmarkCounts.update({recipeName: recipeName}, {$inc: {count: 1}});\n  },\n\n  'unbookmarkRecipe': function(recipeName) {\n    check(this.userId, String);\n    check(recipeName, String);\n\n    var affected = Meteor.users.update({\n      _id: this.userId,\n      bookmarkedRecipeNames: recipeName\n    }, {\n      $pull: {bookmarkedRecipeNames: recipeName}\n    });\n\n    if (affected)\n      BookmarkCounts.update({recipeName: recipeName}, {$inc: {count: -1}});\n  }\n});\n\n// Initialize bookmark counts. We could use upsert instead.\nif (Meteor.isServer && BookmarkCounts.find().count() === 0) {\n  Meteor.startup(function() {\n    _.each(RecipesData, function(recipe, recipeName) {\n      BookmarkCounts.insert({recipeName: recipeName, count: 0});\n    });\n  });\n}"]},"sourceType":"script","hash":"f61cd59205997067c95ceeb6adbbc24f93a47195"}
