{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/farid/Documents/Projects/Meteor/justadit/packages/xyz:loading/loading.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/xyz:loading/loading.js","filename":"/Users/farid/Documents/Projects/Meteor/justadit/packages/xyz:loading/loading.js","passPerPreset":false,"envName":"development","cwd":"/Users/farid/Documents/Projects/Meteor/justadit","root":"/Users/farid/Documents/Projects/Meteor/justadit","generatorOpts":{"filename":"/Users/farid/Documents/Projects/Meteor/justadit/packages/xyz:loading/loading.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/xyz:loading/loading.js"}},"code":"module.export({\n  Loading: function () {\n    return Loading;\n  }\n});\nvar Spinner;\nmodule.watch(require(\"spin.js\"), {\n  \"default\": function (v) {\n    Spinner = v;\n  }\n}, 0);\nvar Loading = refreshLoading();\n\nfunction refreshLoading(userOptions) {\n  var running = 0;\n  var options = Object.create({\n    lines: 13 // The number of lines to draw\n    ,\n    length: 28 // The length of each line\n    ,\n    width: 14 // The line thickness\n    ,\n    radius: 42 // The radius of the inner circle\n    ,\n    scale: 1 // Scales overall size of the spinner\n    ,\n    corners: 1 // Corner roundness (0..1)\n    ,\n    color: '#000' // #rgb or #rrggbb or array of colors\n    ,\n    opacity: 0.25 // Opacity of the lines\n    ,\n    rotate: 0 // The rotation offset\n    ,\n    direction: 1 // 1: clockwise, -1: counterclockwise\n    ,\n    speed: 1 // Rounds per second\n    ,\n    trail: 60 // Afterglow percentage\n    ,\n    fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n    ,\n    zIndex: 2e9 // The z-index (defaults to 2000000000)\n    ,\n    className: 'spinner' // The CSS class to assign to the spinner\n    ,\n    top: '50%' // Top position relative to parent\n    ,\n    left: '50%' // Left position relative to parent\n    ,\n    shadow: false // Whether to render a shadow\n    ,\n    hwaccel: false // Whether to use hardware acceleration\n    ,\n    position: 'absolute' // Element positioning\n    // options specific to this package:\n    ,\n    elementSelector: 'body' // A selector for the target of\n\n  });\n\n  _.extend(options, userOptions);\n\n  return {\n    options: options,\n    // The spinner is only created at the invocation of `start`,\n    // allowing the options to be modified before it is started.\n    spinner: null,\n    start: function () {\n      running++; // `running` is a closure variable\n\n      if (running > 1) return this;\n\n      if (!this.spinner) {\n        this.spinner = new Spinner(this.options).spin(document.querySelector(this.options.elementSelector));\n      }\n\n      return this;\n    },\n    stop: function () {\n      if (!this.spinner) return this;\n      running--; // `running` is a closure variable\n\n      if (running === 0) {\n        this.halt();\n      }\n\n      return this;\n    },\n    wrapAsync: function (func, context) {\n      var self = this;\n      return function () {\n        function loadingWrapper(callback) {\n          self.start();\n          return Meteor.wrapAsync(function () {\n            function meteorWrapped(toWrap) {\n              func.call(this, function () {\n                function stopLoading() {\n                  self.stop();\n                  toWrap.apply(void 0, arguments);\n                }\n\n                return stopLoading;\n              }());\n            }\n\n            return meteorWrapped;\n          }(), context)(callback);\n        }\n\n        return loadingWrapper;\n      }();\n    },\n    halt: function () {\n      if (this.spinner) this.spinner.stop();\n      this.spinner = null;\n      running = 0; // `running` is a closure variable\n\n      return this;\n    },\n    refresh: function (keepOptions, newOptions, noOverrideGlobal) {\n      var opts;\n\n      if (keepOptions) {\n        opts = _.clone(this.options);\n      } else {\n        opts = {};\n      }\n\n      _.extend(opts, newOptions);\n\n      var newLoading = refreshLoading(opts);\n\n      if (!noOverrideGlobal) {\n        this.halt();\n        module.runSetters(Loading = newLoading);\n      }\n\n      return newLoading;\n    },\n    configure: function (opts) {\n      _.extend(this.options, opts);\n\n      return this;\n    },\n    clone: function (newOpts) {\n      var opts = _.extend({\n        position: 'relative'\n      }, newOpts);\n\n      return this.refresh(true, opts, true);\n    },\n    call: function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var name = args[0],\n          callback = args[args.length - 1],\n          methodArgs = args.slice(1, -1);\n      return this.apply(name, methodArgs, {}, callback);\n    },\n    apply: function () {\n      var _Meteor$apply;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var callback = args.pop();\n      return this.wrapAsync((_Meteor$apply = Meteor.apply).bind.apply(_Meteor$apply, [Meteor].concat(args)), Meteor)(callback);\n    }\n  };\n}\n\n;","map":{"version":3,"sources":["packages/xyz:loading/loading.js"],"names":["module","export","Loading","Spinner","watch","require","v","refreshLoading","userOptions","running","options","Object","create","lines","length","width","radius","scale","corners","color","opacity","rotate","direction","speed","trail","fps","zIndex","className","top","left","shadow","hwaccel","position","elementSelector","_","extend","spinner","start","spin","document","querySelector","stop","halt","wrapAsync","func","context","self","loadingWrapper","callback","Meteor","meteorWrapped","toWrap","call","stopLoading","refresh","keepOptions","newOptions","noOverrideGlobal","opts","clone","newLoading","configure","newOpts","args","name","methodArgs","slice","apply","pop","bind"],"mappings":"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","sourcesContent":["import Spinner from 'spin.js'\n\nexport let Loading = refreshLoading();\n\nfunction refreshLoading(userOptions) {\n  let running = 0;\n  const options = Object.create({\n            lines: 13 // The number of lines to draw\n          , length: 28 // The length of each line\n          , width: 14 // The line thickness\n          , radius: 42 // The radius of the inner circle\n          , scale: 1 // Scales overall size of the spinner\n          , corners: 1 // Corner roundness (0..1)\n          , color: '#000' // #rgb or #rrggbb or array of colors\n          , opacity: 0.25 // Opacity of the lines\n          , rotate: 0 // The rotation offset\n          , direction: 1 // 1: clockwise, -1: counterclockwise\n          , speed: 1 // Rounds per second\n          , trail: 60 // Afterglow percentage\n          , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n          , zIndex: 2e9 // The z-index (defaults to 2000000000)\n          , className: 'spinner'  // The CSS class to assign to the spinner\n          , top: '50%' // Top position relative to parent\n          , left: '50%' // Left position relative to parent\n          , shadow: false // Whether to render a shadow\n          , hwaccel: false // Whether to use hardware acceleration\n          , position: 'absolute' // Element positioning\n\n          // options specific to this package:\n          , elementSelector: 'body' // A selector for the target of\n        });\n\n  _.extend(options, userOptions);\n\n  return {\n    options,\n\n    // The spinner is only created at the invocation of `start`,\n    // allowing the options to be modified before it is started.\n    spinner: null,\n\n    start () {\n      running++; // `running` is a closure variable\n      if (running > 1) return this;\n      if (!this.spinner) {\n        this.spinner = new Spinner(this.options).spin(\n          document.querySelector(this.options.elementSelector)\n        );\n      }\n\n      return this;\n    },\n    stop () {\n      if (!this.spinner) return this;\n\n      running--; // `running` is a closure variable\n      if (running === 0) {\n        this.halt();\n      }\n      return this;\n    },\n    wrapAsync (func, context) {\n      const self = this;\n      return function loadingWrapper(callback){\n        self.start();\n        return Meteor.wrapAsync(function meteorWrapped(toWrap){\n          func.call(this, function stopLoading (...args) {\n            self.stop();\n            toWrap(...args);\n          });\n        }, context)(callback);\n      };\n    },\n    halt () {\n      if (this.spinner) this.spinner.stop();\n      this.spinner = null;\n      running = 0; // `running` is a closure variable\n\n      return this;\n    },\n    refresh (keepOptions, newOptions, noOverrideGlobal) {\n      let opts;\n\n      if (keepOptions) {\n        opts = _.clone(this.options);\n      } else {\n        opts = {};\n      }\n      _.extend(opts, newOptions);\n\n      const newLoading = refreshLoading(opts);\n\n      if (!noOverrideGlobal) {\n        this.halt();\n\n        Loading = newLoading;\n      }\n      return newLoading;\n    },\n    configure (opts) {\n      _.extend(this.options, opts);\n      return this;\n    },\n    clone (newOpts) {\n      const opts = _.extend({ position: 'relative' }, newOpts);\n      return this.refresh(true, opts, true);\n    },\n    call (...args) {\n      const name = args[0],\n            callback = args[args.length - 1],\n            methodArgs = args.slice(1, -1);\n      return this.apply(name, methodArgs, {}, callback);\n    },\n    apply (...args) {\n      const callback = args.pop();\n      return this.wrapAsync(Meteor.apply.bind(Meteor, ...args), Meteor)(callback);\n    }\n  };\n};\n"]},"sourceType":"script","hash":"a45fcf2654452da5919ab2509bf6c5f1416bcf2d"}
