{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/farid/Documents/Projects/Meteor/justadit/packages/xyz:loading/loading.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/xyz:loading/loading.js","filename":"/Users/farid/Documents/Projects/Meteor/justadit/packages/xyz:loading/loading.js","passPerPreset":false,"envName":"development","cwd":"/Users/farid/Documents/Projects/Meteor/justadit","root":"/Users/farid/Documents/Projects/Meteor/justadit","presets":[],"generatorOpts":{"filename":"/Users/farid/Documents/Projects/Meteor/justadit/packages/xyz:loading/loading.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/xyz:loading/loading.js"}},"code":"module.export({\n  Loading: () => Loading\n});\nlet Spinner;\nmodule.watch(require(\"spin.js\"), {\n  default(v) {\n    Spinner = v;\n  }\n\n}, 0);\nlet Loading = refreshLoading();\n\nfunction refreshLoading(userOptions) {\n  let running = 0;\n  const options = Object.create({\n    lines: 13 // The number of lines to draw\n    ,\n    length: 28 // The length of each line\n    ,\n    width: 14 // The line thickness\n    ,\n    radius: 42 // The radius of the inner circle\n    ,\n    scale: 1 // Scales overall size of the spinner\n    ,\n    corners: 1 // Corner roundness (0..1)\n    ,\n    color: '#000' // #rgb or #rrggbb or array of colors\n    ,\n    opacity: 0.25 // Opacity of the lines\n    ,\n    rotate: 0 // The rotation offset\n    ,\n    direction: 1 // 1: clockwise, -1: counterclockwise\n    ,\n    speed: 1 // Rounds per second\n    ,\n    trail: 60 // Afterglow percentage\n    ,\n    fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n    ,\n    zIndex: 2e9 // The z-index (defaults to 2000000000)\n    ,\n    className: 'spinner' // The CSS class to assign to the spinner\n    ,\n    top: '50%' // Top position relative to parent\n    ,\n    left: '50%' // Left position relative to parent\n    ,\n    shadow: false // Whether to render a shadow\n    ,\n    hwaccel: false // Whether to use hardware acceleration\n    ,\n    position: 'absolute' // Element positioning\n    // options specific to this package:\n    ,\n    elementSelector: 'body' // A selector for the target of\n\n  });\n\n  _.extend(options, userOptions);\n\n  return {\n    options,\n    // The spinner is only created at the invocation of `start`,\n    // allowing the options to be modified before it is started.\n    spinner: null,\n\n    start() {\n      running++; // `running` is a closure variable\n\n      if (running > 1) return this;\n\n      if (!this.spinner) {\n        this.spinner = new Spinner(this.options).spin(document.querySelector(this.options.elementSelector));\n      }\n\n      return this;\n    },\n\n    stop() {\n      if (!this.spinner) return this;\n      running--; // `running` is a closure variable\n\n      if (running === 0) {\n        this.halt();\n      }\n\n      return this;\n    },\n\n    wrapAsync(func, context) {\n      const self = this;\n      return function loadingWrapper(callback) {\n        self.start();\n        return Meteor.wrapAsync(function meteorWrapped(toWrap) {\n          func.call(this, function stopLoading(...args) {\n            self.stop();\n            toWrap(...args);\n          });\n        }, context)(callback);\n      };\n    },\n\n    halt() {\n      if (this.spinner) this.spinner.stop();\n      this.spinner = null;\n      running = 0; // `running` is a closure variable\n\n      return this;\n    },\n\n    refresh(keepOptions, newOptions, noOverrideGlobal) {\n      let opts;\n\n      if (keepOptions) {\n        opts = _.clone(this.options);\n      } else {\n        opts = {};\n      }\n\n      _.extend(opts, newOptions);\n\n      const newLoading = refreshLoading(opts);\n\n      if (!noOverrideGlobal) {\n        this.halt();\n        module.runSetters(Loading = newLoading);\n      }\n\n      return newLoading;\n    },\n\n    configure(opts) {\n      _.extend(this.options, opts);\n\n      return this;\n    },\n\n    clone(newOpts) {\n      const opts = _.extend({\n        position: 'relative'\n      }, newOpts);\n\n      return this.refresh(true, opts, true);\n    },\n\n    call(...args) {\n      const name = args[0],\n            callback = args[args.length - 1],\n            methodArgs = args.slice(1, -1);\n      return this.apply(name, methodArgs, {}, callback);\n    },\n\n    apply(...args) {\n      const callback = args.pop();\n      return this.wrapAsync(Meteor.apply.bind(Meteor, ...args), Meteor)(callback);\n    }\n\n  };\n}\n\n;","map":{"version":3,"sources":["packages/xyz:loading/loading.js"],"names":["module","export","Loading","Spinner","watch","require","default","v","refreshLoading","userOptions","running","options","Object","create","lines","length","width","radius","scale","corners","color","opacity","rotate","direction","speed","trail","fps","zIndex","className","top","left","shadow","hwaccel","position","elementSelector","_","extend","spinner","start","spin","document","querySelector","stop","halt","wrapAsync","func","context","self","loadingWrapper","callback","Meteor","meteorWrapped","toWrap","call","stopLoading","args","refresh","keepOptions","newOptions","noOverrideGlobal","opts","clone","newLoading","configure","newOpts","name","methodArgs","slice","apply","pop","bind"],"mappings":"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","sourcesContent":["import Spinner from 'spin.js'\n\nexport let Loading = refreshLoading();\n\nfunction refreshLoading(userOptions) {\n  let running = 0;\n  const options = Object.create({\n            lines: 13 // The number of lines to draw\n          , length: 28 // The length of each line\n          , width: 14 // The line thickness\n          , radius: 42 // The radius of the inner circle\n          , scale: 1 // Scales overall size of the spinner\n          , corners: 1 // Corner roundness (0..1)\n          , color: '#000' // #rgb or #rrggbb or array of colors\n          , opacity: 0.25 // Opacity of the lines\n          , rotate: 0 // The rotation offset\n          , direction: 1 // 1: clockwise, -1: counterclockwise\n          , speed: 1 // Rounds per second\n          , trail: 60 // Afterglow percentage\n          , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n          , zIndex: 2e9 // The z-index (defaults to 2000000000)\n          , className: 'spinner'  // The CSS class to assign to the spinner\n          , top: '50%' // Top position relative to parent\n          , left: '50%' // Left position relative to parent\n          , shadow: false // Whether to render a shadow\n          , hwaccel: false // Whether to use hardware acceleration\n          , position: 'absolute' // Element positioning\n\n          // options specific to this package:\n          , elementSelector: 'body' // A selector for the target of\n        });\n\n  _.extend(options, userOptions);\n\n  return {\n    options,\n\n    // The spinner is only created at the invocation of `start`,\n    // allowing the options to be modified before it is started.\n    spinner: null,\n\n    start () {\n      running++; // `running` is a closure variable\n      if (running > 1) return this;\n      if (!this.spinner) {\n        this.spinner = new Spinner(this.options).spin(\n          document.querySelector(this.options.elementSelector)\n        );\n      }\n\n      return this;\n    },\n    stop () {\n      if (!this.spinner) return this;\n\n      running--; // `running` is a closure variable\n      if (running === 0) {\n        this.halt();\n      }\n      return this;\n    },\n    wrapAsync (func, context) {\n      const self = this;\n      return function loadingWrapper(callback){\n        self.start();\n        return Meteor.wrapAsync(function meteorWrapped(toWrap){\n          func.call(this, function stopLoading (...args) {\n            self.stop();\n            toWrap(...args);\n          });\n        }, context)(callback);\n      };\n    },\n    halt () {\n      if (this.spinner) this.spinner.stop();\n      this.spinner = null;\n      running = 0; // `running` is a closure variable\n\n      return this;\n    },\n    refresh (keepOptions, newOptions, noOverrideGlobal) {\n      let opts;\n\n      if (keepOptions) {\n        opts = _.clone(this.options);\n      } else {\n        opts = {};\n      }\n      _.extend(opts, newOptions);\n\n      const newLoading = refreshLoading(opts);\n\n      if (!noOverrideGlobal) {\n        this.halt();\n\n        Loading = newLoading;\n      }\n      return newLoading;\n    },\n    configure (opts) {\n      _.extend(this.options, opts);\n      return this;\n    },\n    clone (newOpts) {\n      const opts = _.extend({ position: 'relative' }, newOpts);\n      return this.refresh(true, opts, true);\n    },\n    call (...args) {\n      const name = args[0],\n            callback = args[args.length - 1],\n            methodArgs = args.slice(1, -1);\n      return this.apply(name, methodArgs, {}, callback);\n    },\n    apply (...args) {\n      const callback = args.pop();\n      return this.wrapAsync(Meteor.apply.bind(Meteor, ...args), Meteor)(callback);\n    }\n  };\n};\n"]},"sourceType":"script","hash":"f0c4f3e51f07b8a499b440fb488c18e9876706e8"}
